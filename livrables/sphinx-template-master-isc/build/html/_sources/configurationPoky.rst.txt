Configuration Poky
===================
Poky est un le dossier dans lequel nous allons travailler. 

Dans un prmeier temps nous allons importer des layers permettant d'augmenter les capacités de base du yocto.

Layers
------

Pour supporter la carte humming board nous devons ajouter la layer "meta-freescale" et "meta-solidrun-arm-imx6"
Et pour Supporter la Raspberry nous devons ajouter "meta-raspberry" et "meta-openembedded"

.. code-block:: bash

    $ cd .../poky/
    $ git clone https://git.yoctoproject.org/git/meta-freescale
    $ cd meta-freescale/
    $ git checkout -b rocko origin/rocko
    $ cd ..
    $ git clone https://github.com/SolidRun/meta-solidrun-arm-imx6.git
    $ cd meta-solidrun-arm-imx6/
    $ git checkout -b rocko origin/rocko
    $ cd ..
    $ git clone git://git.yoctoproject.org/meta-raspberrypi
    $ cd meta-raspberrypi/
    $ git checkout -b rocko origin/rocko
    $ cd ..
    $ git clone https://github.com/openembedded/meta-openembedded.git
    $ cd meta-openembedded/
    $ git checkout -b rocko origin/rocko
    $ cd ..


Maintenant il faut activer l'environnement de build et ajouter ces nouvelles layers au fichier de configuration de notre image.

.. code-block:: bash 

    $ source oe-init-build-env
    #Après l'execution de cette cmmande poky vous a placé dans le dossier *build*

Configuration *bblayers.conf*
------------------------------

.. code-block:: bash 

    #Layers pour la hummingboard
    $ bitbake-layers add-layer ../meta-freescale
    $ bitbake-layers add-layer ../meta-solidrun-arm-imx6

    #Layers pour la raspberry
    $ bitbake-layers add-layer ../meta-openembedded/meta-oe
    $ bitbake-layers add-layer ../meta-openembedded/meta-python
    $ bitbake-layers add-layer ../meta-raspberrypi

Compilation
-----------

Appartir de maintenant nous pouvons déjà compiler l'image *core-image-minimal* qui est une image sur laquel on va se baser par la suite 
**Cela peut prendre plusieurs heures.**

.. code-block:: bash

    $ bitbake core-image-minimal


Configuration *local.conf*
--------------------------

Ce fichier contient les informations pour compiler l'image. Il nous permet aussi d'ajouter des élèments comme des utilisateurs par défaut.

Vous devez ouvrir le fichier local et ajouter les lignes suivantes à l'intérieur.
Nous ajoutons :

1. Le support pour les 2 cartes
2. L'utilsations de paquets ipk
3. L'ajout d'un compt utilisateur *ubs* avec le mot de pass *ssi*
4. L'utilisation de systemd
5. L'utilisation de ext4 pour la raspberry et hummingboard
6. l'UART pour pouvoir afficher les valeurs du temperature et d'humidité du capteur I2C


.. code-block:: bash

    #Prise en charge de la carte hummingboard ou de la raspberry
    MACHINE = "solidrun-imx6"
    #MACHINE = "raspberrypi3"

    #Nom de la distribition
    DISTRO_NAME = "homeautomation-hummingboard"

    #Gestion des paquets par ipk
    PACKAGE_CLASSES = "package_ipk"

    #Ajout d'un utilisateur *ubs*
    INHERIT += "extrausers"
    EXTRA_USERS_PARAMS = "useradd -p ssi ubs;"

    #Utilisation de systemd à la place de SysVinit
    DISTRO_FEATURES_append = " systemd"
    VIRTUAL-RUNTIME_init_manager = "systemd"

    #Utilisation d'un root file system ext4
    #Pour la raspberry
    #IMAGE_FSTYPES += "ext4 rpi-sdimg"
    
    #Pour la hummingboard
    IMAGE_FSTYPES += "ext4"

    #Pour utiliser la la liaison serie
    ENABLE_UART = "1"


